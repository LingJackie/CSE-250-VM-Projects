/**
 * main.cpp
 *
 * Copyright 2018 Andrew Hughes (ahughes6@buffalo.edu)
 *
 * This work is licensed under the Creative Commons 
 * Attribution-NonCommercial-ShareAlike 4.0 International License.
 * To view a copy of this license, visit
 * http://creativecommons.org/licenses/by-nc-sa/4.0/.
 *
 */

#include "MovieRatings.hpp"
#include <iostream>

std::vector<Movie> addMovies(MovieRatings& ratingsSystem);
std::vector<User> addUsers(MovieRatings& ratingsSystem);
void addReviews(MovieRatings& ratingsSystem);

int main() {
    // This provides a test using only reviews for the first 20 movies derived
    // from the small data set.
    MovieRatings ratingsSystem;
    std::vector<Movie> movies = addMovies(ratingsSystem);
    std::vector<User> users = addUsers(ratingsSystem);
    addReviews(ratingsSystem);

    size_t topMovieId = ratingsSystem.getTopMovies(1)[0];
    Movie topMovie = movies[topMovieId-1];
    std::cout << "Top Movie Overall:\n";
    std::cout << "Title: " << topMovie.title << '\n';
    std::cout << "ID: " << topMovie.movieId << '\n';
    std::cout << "IMDB link: https://www.imdb.com/title/tt" << topMovie.imdbId << '/' << '\n';
    std::cout << "The Movie DB link: https://www.themoviedb.org/movie/" << topMovie.tmdbId << std::endl;

    for(size_t index = 0; index < users.size(); ++index) {
        User user = users[index];
        std::cout << "Top Movie for " << user.userId << ":\n";
        topMovieId = ratingsSystem.getFavoriteMovies(user,1)[0];
        topMovie = movies[topMovieId-1];
        std::cout << "Title: " << topMovie.title << '\n';
        std::cout << "ID: " << topMovie.movieId << '\n';
        std::cout << "IMDB link: https://www.imdb.com/title/tt" << topMovie.imdbId << '/' << '\n';
        std::cout << "The Movie DB link: https://www.themoviedb.org/movie/" << topMovie.tmdbId << std::endl;
    }

    User mvp = ratingsSystem.getMVP();
    std::cout << "User with the most ratings: " << mvp.userId << std::endl;
}

std::vector<Movie> addMovies(MovieRatings& ratingsSystem) {
    std::vector<size_t> movieIds = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
    std::vector<size_t> imdbIds = {114709,113497,113228,114885,113041,113277,114319,112302,114576,113189,112346,112896,112453,113987,112760,112641,114388,113101,112281,113845};
    std::vector<size_t> tmdbIds = {862,8844,15602,31357,11862,949,11860,45325,9091,710,9087,12110,21032,10858,1408,524,4584,5,9273,11517};
    std::vector<std::string> titles = {"Toy Story (1995)","Jumanji (1995)","Grumpier Old Men (1995)","Waiting to Exhale (1995)","Father of the Bride Part II (1995)","Heat (1995)","Sabrina (1995)","Tom and Huck (1995)","Sudden Death (1995)","GoldenEye (1995)","American President, The (1995)","Dracula: Dead and Loving It (1995)","Balto (1995)","Nixon (1995)","Cutthroat Island (1995)","Casino (1995)","Sense and Sensibility (1995)","Four Rooms (1995)","Ace Ventura: When Nature Calls (1995)","Money Train (1995)"};

    std::vector<Movie> movies;
    for(size_t index = 0; index < movieIds.size(); ++index) {
        Movie m;
        m.movieId = movieIds[index];
        m.imdbId = imdbIds[index];
        m.tmdbId = tmdbIds[index];
        m.title = titles[index];
        // Add movie to ratings system.
        ratingsSystem.addMovie(m);
        // Add movie to output.
        movies.push_back(m);
    }

    return movies;
}

std::vector<User> addUsers(MovieRatings& ratingsSystem) {
    std::vector<size_t> userIds = {1,5,6,7,8,11,14,15,17,18,19,20,21,23,24,26,27,28,31,32,33,34,35,38,40,42,43,44,45,46,50,51,54,56,57,58,59,61,62,63,64,66,68,71,73,76,78,79,81,82,84,86,88,89,90,91,93,94,95,96,98,99,100,102,103,104,105,107,109,111,112,113,116,117,119,120,121,122,124,125,130,132,134,135,136,137,139,140,141,144,145,147,149,150,151,153,155,156,159,160,161,162,166,167,169,170,171,173,174,176,177,178,179,181,182,185,186,187,188,191,192,193,195,198,199,200,201,202,206,208,213,214,216,217,219,220,221,222,223,226,227,229,230,232,233,234,235,239,240,243,244,246,247,248,249,252,254,256,257,259,261,262,263,264,266,269,270,273,274,275,276,277,279,280,282,283,284,286,287,288,289,290,291,292,293,294,295,297,298,299,301,302,303,304,305,307,308,310,311,312,313,314,317,318,321,322,323,325,326,328,330,331,332,334,336,337,339,340,341,345,346,347,349,350,351,353,354,357,359,361,362,364,367,368,369,372,373,376,377,378,379,380,381,382,385,386,387,389,391,395,396,399,400,401,402,404,405,408,410,411,412,413,414,419,420,422,425,426,427,428,432,434,436,437,438,441,443,444,445,446,447,448,451,452,453,455,456,458,460,462,464,468,469,470,471,474,475,476,477,480,482,483,484,485,486,488,489,490,492,493,495,497,498,500,501,504,509,510,512,513,514,517,520,521,522,523,524,525,527,528,529,530,531,532,533,534,541,544,550,552,553,555,557,559,560,561,562,563,565,566,567,569,570,571,572,573,577,579,580,584,585,586,587,588,590,592,594,596,597,599,600,601,602,603,604,605,606,607,608,609,610};

    std::vector<User> users;
    for(size_t index = 0; index < userIds.size(); ++index) {
        User u;
        u.userId = userIds[index];
        // Add user to ratings system.
        ratingsSystem.addUser(u);
        // Add user to output.
        users.push_back(u);
    }

    return users;
}

void addReviews(MovieRatings& ratingsSystem) {
    std::vector<size_t> userIds = {1,1,1,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,8,8,8,11,11,14,14,14,15,17,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,21,21,21,21,23,24,26,27,27,28,28,31,31,31,31,31,32,32,32,32,33,33,33,33,34,35,38,38,40,40,40,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,45,45,45,45,45,45,46,46,50,51,51,51,54,54,56,56,56,57,57,57,57,58,58,58,58,59,61,62,62,63,63,64,64,64,64,64,66,66,66,66,68,68,68,68,68,68,68,68,68,68,68,68,71,71,71,73,76,78,78,79,81,82,82,82,82,84,84,84,84,84,84,84,84,86,88,89,89,90,90,90,90,91,91,91,91,91,91,91,93,93,93,93,94,94,94,94,94,95,95,96,98,99,100,100,100,100,100,102,102,103,103,103,103,103,103,104,104,105,105,107,107,107,107,109,109,109,109,109,111,111,112,112,112,112,112,112,113,116,117,117,117,117,117,117,117,117,117,119,119,120,120,121,121,121,121,121,121,122,122,124,125,130,132,132,134,135,135,136,136,136,136,137,139,140,140,140,140,141,141,144,144,144,144,144,145,147,149,150,150,150,150,151,151,151,151,153,153,155,156,156,156,156,159,160,160,160,160,161,162,162,162,166,166,166,166,167,169,169,169,169,169,169,170,170,171,173,173,174,174,176,177,177,177,177,177,177,178,178,179,179,179,179,179,179,181,181,181,181,181,181,182,182,182,182,182,182,182,185,186,186,186,187,188,191,191,191,191,192,193,195,195,195,198,199,199,199,199,200,200,200,200,201,201,201,202,202,202,202,202,206,206,206,206,208,213,214,214,216,217,217,217,217,217,217,217,217,217,219,219,219,219,219,220,220,220,221,222,222,223,226,226,226,226,226,226,227,229,229,229,229,230,232,232,232,233,234,235,235,239,239,239,239,239,240,240,240,240,240,240,243,244,244,246,247,248,249,249,249,249,252,254,256,257,257,259,261,262,262,262,262,263,263,263,264,266,266,266,266,269,269,269,269,269,270,270,270,270,270,270,270,270,273,273,274,274,274,274,274,274,274,274,274,275,275,276,276,276,276,276,276,277,279,280,280,280,282,282,282,282,283,284,284,284,284,284,286,286,287,288,288,288,288,288,288,288,288,289,289,290,290,291,292,292,292,293,294,294,294,294,294,294,295,297,298,298,298,299,301,301,302,302,302,303,304,304,304,304,304,304,304,305,305,305,307,307,307,307,307,307,307,308,308,308,308,310,311,312,312,313,313,314,314,314,314,314,314,314,317,317,318,318,318,318,321,321,321,321,322,322,322,322,323,323,323,323,325,325,326,328,328,330,330,330,330,331,332,332,334,334,336,336,337,337,337,337,337,337,337,337,337,337,339,339,339,340,341,345,346,347,347,347,347,347,349,350,350,350,350,351,353,353,353,353,353,353,353,353,354,357,357,357,357,357,357,359,359,361,362,362,364,364,367,368,368,368,368,369,372,372,372,372,372,372,372,373,373,373,373,373,373,376,376,377,378,379,380,380,380,380,380,380,380,380,381,381,381,382,385,385,385,385,385,386,386,386,386,387,387,389,389,389,389,389,391,391,391,395,395,396,399,400,401,402,402,404,404,405,408,408,410,410,411,411,411,411,411,411,412,412,413,414,414,414,414,414,414,414,414,414,414,414,414,414,419,420,422,425,425,425,426,427,428,428,432,432,432,434,434,434,434,436,436,436,437,437,437,437,437,437,438,438,438,438,438,441,443,444,444,445,446,446,446,446,446,447,447,448,448,448,448,448,448,448,448,448,451,451,451,451,451,452,453,453,453,455,456,456,456,456,458,458,458,460,462,462,462,464,464,464,468,469,469,469,469,470,470,470,470,470,470,470,470,470,471,474,474,474,474,474,474,474,474,474,475,475,476,476,476,476,476,477,477,477,477,480,480,480,480,480,480,480,482,482,483,483,483,483,483,483,483,484,484,485,486,486,488,488,489,489,489,489,489,489,489,489,490,490,492,492,492,492,492,492,492,492,493,495,497,497,498,498,500,500,501,501,501,501,501,501,501,501,501,501,501,501,501,504,509,509,509,509,509,510,510,512,513,514,514,514,517,517,517,517,520,520,521,521,521,521,521,522,522,523,524,524,524,524,524,524,525,525,527,528,529,529,530,531,532,533,534,534,534,534,541,541,541,541,541,541,544,544,544,550,552,552,553,553,555,555,555,557,559,559,559,559,559,559,560,561,561,561,561,562,563,565,566,566,566,566,566,567,569,570,570,570,570,571,572,572,573,573,573,573,577,579,579,579,580,580,580,580,584,584,584,585,586,587,587,588,588,588,588,588,590,590,590,590,590,590,590,590,590,592,592,592,592,592,594,594,594,594,596,597,597,597,597,597,597,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,600,600,600,600,600,600,600,601,602,602,602,602,602,602,602,603,603,603,603,604,604,604,604,604,604,604,605,605,606,606,606,606,606,606,606,607,607,608,608,608,608,608,608,609,609,610,610,610};
    std::vector<size_t> movieIds = {1,3,6,1,2,3,4,5,6,7,8,10,11,13,15,16,17,19,1,2,10,11,6,10,4,7,19,1,1,1,2,6,16,1,2,3,7,10,12,13,15,19,2,8,13,1,2,10,19,6,6,10,1,2,6,16,1,5,7,10,17,1,3,6,7,1,7,11,17,10,11,11,17,1,17,19,3,7,10,11,16,19,1,3,5,7,8,10,11,1,3,6,12,18,1,5,6,7,11,19,1,10,1,2,3,7,1,17,10,11,19,1,6,10,11,3,5,7,19,10,16,2,6,1,10,1,3,6,16,19,1,5,18,19,1,2,3,5,6,7,10,11,16,17,18,19,1,7,17,1,1,1,20,6,10,1,2,6,10,4,5,6,7,10,11,14,17,1,16,1,11,1,7,14,17,1,2,3,6,10,16,19,1,2,10,15,2,10,11,17,19,7,18,1,1,10,3,11,16,17,19,3,6,1,2,5,16,18,19,2,10,6,16,1,2,5,11,6,11,14,16,18,5,16,1,2,6,16,17,19,11,3,2,3,5,6,7,10,11,17,19,1,10,5,12,1,5,6,11,16,19,2,19,1,2,1,1,17,1,1,2,10,15,16,19,1,19,1,2,6,11,1,19,1,2,10,17,19,1,5,2,3,5,6,7,1,3,9,12,1,2,1,1,11,17,19,1,1,2,6,10,1,4,16,17,1,6,10,17,1,1,2,3,5,7,11,5,10,1,10,17,10,11,10,1,2,7,11,16,19,1,10,1,3,7,9,18,19,5,6,7,10,11,16,1,6,10,14,16,17,18,1,1,2,10,16,7,1,6,16,17,10,1,6,10,16,17,6,7,11,20,1,5,10,19,1,11,16,1,2,6,10,11,1,7,14,17,10,1,1,17,1,1,2,3,6,9,10,12,19,20,1,2,6,10,19,1,6,10,2,2,19,1,1,2,3,10,16,19,17,1,5,10,19,2,1,2,10,1,1,10,11,1,6,11,16,20,1,2,3,10,16,19,10,6,10,17,1,10,1,2,19,20,1,1,18,7,16,2,16,4,7,10,17,1,11,17,1,1,6,16,17,1,3,5,6,9,1,3,5,6,7,9,14,17,1,12,1,2,6,8,10,12,16,19,20,1,17,1,2,5,7,12,19,1,1,1,7,19,1,6,10,16,1,2,10,15,19,20,6,7,16,1,2,3,5,10,12,13,17,3,16,1,11,1,1,10,19,1,2,3,6,10,12,19,18,6,1,2,16,2,10,17,3,14,17,16,1,2,7,10,11,13,17,2,6,16,1,2,3,10,16,18,19,2,3,6,19,16,16,6,16,6,10,1,6,7,10,11,15,17,6,16,2,6,18,19,2,3,5,19,1,2,10,11,1,2,17,19,6,19,20,1,13,1,2,3,16,10,1,16,1,10,1,6,1,3,5,6,7,9,12,14,16,17,1,6,16,10,1,11,17,1,2,10,11,19,10,1,7,12,17,12,1,2,5,6,9,10,11,19,10,1,2,11,16,17,19,1,2,10,6,16,1,9,1,3,6,10,16,19,1,6,8,10,11,14,16,1,2,6,11,16,19,10,19,19,1,19,1,2,6,10,12,16,18,19,1,2,19,1,1,6,10,14,16,6,10,16,20,10,11,1,5,6,9,17,1,6,10,2,10,1,1,6,1,5,9,11,17,16,10,19,3,11,1,2,4,7,10,11,1,17,16,1,2,3,5,6,7,8,10,11,15,16,17,18,10,1,1,2,6,10,2,16,9,19,1,2,19,1,2,6,10,1,2,8,5,6,9,14,16,17,1,6,10,11,19,10,1,6,16,17,2,10,11,16,17,2,10,1,2,3,5,10,12,16,19,20,1,5,6,7,17,10,1,10,16,11,1,3,5,9,2,5,10,1,1,10,16,9,16,20,1,1,6,10,11,1,2,3,5,6,7,10,14,19,1,1,2,5,6,7,11,14,16,17,2,19,1,2,10,11,13,1,2,3,19,1,2,3,6,10,16,19,2,16,1,2,5,10,16,18,19,1,2,10,6,10,1,17,2,5,7,10,11,17,18,19,1,5,1,3,5,6,7,9,12,14,6,19,2,19,7,10,1,11,2,3,5,6,7,8,10,11,15,16,17,18,20,1,1,5,13,17,19,7,16,2,7,1,11,16,1,2,10,17,10,19,5,6,7,14,18,1,10,2,1,6,10,12,19,20,1,2,2,1,1,7,11,10,6,1,1,2,10,19,1,7,10,11,15,19,1,3,14,1,3,19,6,16,1,3,19,10,1,2,6,10,15,19,1,1,2,5,6,1,2,19,2,7,10,11,17,1,10,1,2,10,11,12,1,17,1,2,6,10,6,1,11,17,1,6,10,16,1,10,19,16,2,1,11,3,6,10,16,20,1,2,3,5,6,10,11,17,19,2,6,10,15,19,2,3,11,17,1,1,6,7,10,11,17,1,2,3,6,7,9,10,11,12,15,16,17,18,19,20,1,2,4,5,7,17,19,1,2,6,10,11,14,16,19,1,6,16,17,1,2,5,6,14,17,19,1,2,1,7,11,15,17,18,19,1,11,1,2,3,10,16,19,1,10,1,6,16};
    std::vector<double> ratings = {4,4,4,4,4,5,3,5,4,4,3,3,4,3,4,4,4,2,4.5,4,2,4,5,3,3,3,1,2.5,4.5,3.5,3,4,4.5,4,3,3,2,2,1,3,2,2,3,1,4,3.5,3.5,5,2.5,4,4.5,3,3,4,3.5,2.5,5,3,4,4,3,3,3,3,4,3,1,2,4,5,4,5,3,5,5,2,4,3,5,5,5,2,5,5,5,5,5,4,4,3,3,3,1,4,4,3,4,3,3,4.5,5,3,3,4.5,4,4,3,3,4,4,5,5,3,3,3,3,4,5,1,3,4,4,4.5,5,3,4,3.5,4.5,5,3.5,4,4,4,3,2.5,2.5,2,2,4,2,4.5,4.5,3.5,3.5,2,1.5,5,3,1,4.5,0.5,4,3,4,1,2.5,3,3.5,3.5,3,3,4,3,3,4,4,5,4,4.5,3,2.5,3,4,5,5,4,3,3,5,3.5,4.5,2,3,5,4,4,4,3,3,1,2,3,3.5,5,4.5,4,3.5,4,4.5,4.5,1,5,3,4,4,4,5,5,3.5,3,3,4,4.5,4,5,4,5,3,4,4,4,3,3.5,4.5,3,1.5,4.5,4.5,0.5,4,3,3.5,3,3,3,3,4,3,4,3,2,3.5,4,4,3,4,3,5,4,5,2,4,3.5,4,4,3,2,3,3,4,3,5,5,5,3,4,1,3,3.5,5,4,4,2,3.5,3,3,4,3,5,4.5,1,3,3,4,3,5,3,4,3,2,2,3,4,3,4,3,4.5,4,4,2,1,4,3,5,5,5,3.5,4.5,4,3.5,4.5,4,5,5,4.5,4,3,3,5,3,4,3,5,5,5,3.5,1,3,3,2,4,4,4,4,3,3,4,3,3,3,3,2,5,3,4,4.5,3.5,4,5,4,5,4,4,4,4,4,4,4,4,4,5,5,2,4,4,4,3,4,3,4,2,3.5,4,4.5,3.5,5,4,4,4,4,5,4,4,5,4,4,5,2,3.5,3,3,3,4,2,1,2,3,4,3,1,2,3.5,2.5,3.5,4.5,2.5,5,3.5,4,3.5,2.5,3.5,3.5,3.5,3,3.5,4,4.5,3.5,3.5,5,3,4,3,2.5,3.5,4,3,3,5,2,4,4,5,5,4.5,3.5,5,5,4,3,3,5,5,5,5,5,5,3.5,4,4,3.5,3.5,4.5,4.5,5,1,3.5,2,4,1,3,2,3,4,4,5,4,2,4,5,1,5,4,3,5,2,5,3,3,3,3,3,5,4,5,1,4,3.5,4,3,4,3.5,4.5,4,3.5,5,5,4,4,3,4,4,4,4,3,4.5,4.5,3,4.5,4,3.5,4,3,4,4,4,4,1,4.5,3.5,2,4.5,2,4,2,3,2,2,3.5,2.5,4.5,4,4,4,4,3.5,1.5,3,3,1,3,3,1,2,3.5,5,2,0.5,4,3,4,4,3,4,5,2.5,5,4,4,4,5,4,3,3.5,3.5,4.5,4,2.5,3.5,2.5,4.5,3,4,3,0.5,1,1,1,2.5,4,4,3,4,3,3,4,3,5,2,4,5,5,3.5,4,3,3.5,5,3,3,3,3.5,3,4,4,3.5,4,3.5,2.5,4,2,3.5,5,3,4,1.5,3,3.5,3,4,3.5,3.5,3.5,4,4,4,4,4,5,3,5,3,3,4,4,4,4,4.5,4,5,2.5,4,5,3,4,4,4,4,4,3,3,2,5,5,4,3,4,3,3,4,4,3.5,5,3,3.5,3.5,5,2,4,3.5,3.5,4,4,5,3,5,3,4,3,4,4,3,5,2,3,4,4,4,3,3,5,2,4,1,4.5,2,2,4.5,2,5,5,5,5,4,3,4,5,3.5,4,2.5,4.5,4,3,3,3,3,3,3,4,2,3.5,2.5,5,4,5,3,4,3,4,3,3,3,5,4,5,3.5,3,3,4,4,4,4.5,3.5,4,3,5,4,2,3,3,4,2,5,5,4,3,4,2,3,3,3,3,5,2,3,4,3,3.5,4,4,3,4,3,4.5,4,2,1,2.5,4,2,4,2.5,4,3.5,4,4,3,2,5,3,3,5,4,4.5,5,4,4,3,4.5,4,4,4,3.5,3,3,4,3,5,5,3,5,3,3,3,4,2,5,2,3,5,3,4,3,5,4,5,2,3,4,5,3,3,4,4,3,4,4.5,1.5,3,3.5,2.5,4.5,4,4,4,3,2,3,4,3,3,3,3,3,3,4,3,5,4,3,1.5,3,3,2.5,3,4,5,4.5,4,4,4,3,3,3,4,4,3,3,3,3,2.5,4,4,4,1.5,4.5,2,4,4,2.5,2,4,4,3.5,4.5,2.5,4,5,4,4.5,5,2.5,2,4,2.5,1.5,4.5,2,2,3.5,0.5,4,4,3,3,3,5,3,3,4,4.5,2.5,4,4,3,4,1,3,5,3,3,4,3,4,3,1,3,3,5,1,4,4,1.5,3,3,4,1,1,3,3,4,4,3.5,4,3,0.5,0.5,4,1,3,4,3,4,4,3,4.5,4.5,4,4,4,1,3,2,4,3.5,4,2.5,3,2,4,4,5,5,4,4.5,4,4,3,4,4,4,3,2,3,3,3,4,1,3.5,5,5,4,5,3,4.5,5,4,5,3,3,2,3,4,4,3,4,4.5,2.5,3,4,4,3,5,5,3.5,4,4,3.5,3.5,3.5,1,4,5,5,4.5,4.5,4.5,4,4,3,5,3,4,3.5,4.5,5,5,3,5,4,5,4,3,5,3,4,2,4,2.5,3,2,3.5,3.5,3,3.5,2,4,3,3,4,4,4,4,5,4,4,4,3,1,3,3,3,3,2.5,1.5,4.5,2.5,1.5,3.5,2.5,1.5,1.5,3,3.5,3,3,1.5,2.5,4,1.5,2.5,3.5,3.5,3,4,4,3,3,3,5,3,2,4,4,4,3,3,5,3,3,4,4,1,4,3.5,2.5,2.5,2.5,3.5,4,4,2,4,3,2.5,2,2,4,4.5,2,3,4,5,5,4.5};
    for(size_t index = 0; index < userIds.size(); ++index) {
        Rating r;
        r.userId = userIds[index];
        r.movieId = movieIds[index];
        r.rating = ratings[index];
        // Add rating.
        ratingsSystem.addRating(r);
    }
}
